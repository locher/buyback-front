# ================================================
# !!! @ansible - DO NOT EDIT THIS FILE LOCALLY !!!
# ================================================

cache:
  paths:
    - node_modules/

stages:
  - build
  - deploy
  - clean

before_script:
  - export BRANCH_NAME=`echo "${CI_COMMIT_REF_NAME}" | sed 's/\//\-/g'`
  - export DOCKER_RUN_USER="docker run --rm --user $(id -u):$(id -g)"
  - export DOCKER_RUN_APP="$DOCKER_RUN_USER -w /app -v $(pwd):/app -v /etc/passwd:/etc/passwd:ro -v $HOME:/home/gitlab-runner:rw"
  - export IMAGE_TAG="$(echo $CI_COMMIT_REF_NAME | tr / -)"

variables:
  IMG_NGINX: registry.idx.ovh/nginx:front-bullseye
  IMG_NODE: registry.idx.ovh/node:18-buster
  IMG_NODE_DEV: registry.idx.ovh/node:18-buster-dev
  REGISTRY_PROJECT_PATH_LEGACY: registry.idx.ovh/$CI_PROJECT_PATH
  REGISTRY_PROJECT_PATH: europe-west9-docker.pkg.dev/indexia-system/docker/$CI_PROJECT_PATH
  IMG_TYPE: "node"

pull:
  stage: build
  script:
    - echo pulling images
    - docker pull ${IMG_NODE_DEV}

build_prod:
  stage: build
  needs:
    - pull
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - node_modules/
  script:
    - echo "CI_COMMIT_REF_NAME $CI_COMMIT_REF_NAME"
    - echo "IMAGE_TAG $IMAGE_TAG"
    - echo "BRANCH_NAME = $BRANCH_NAME"
    # update front dependencies (1)
    - $DOCKER_RUN_APP ${IMG_NODE_DEV} cp -f configs/hubside-up.config.json brand.config.json
    - $DOCKER_RUN_APP ${IMG_NODE_DEV} yarn install --no-progress
    # Hubside Up
    # update front dependencies (2)
    - $DOCKER_RUN_APP --env-file .node.env.dist ${IMG_NODE_DEV} yarn build
    # build image
    - docker image build --pull . -f .${IMG_TYPE}.Dockerfile -t $REGISTRY_PROJECT_PATH/hubside-up/${IMG_TYPE}:$IMAGE_TAG

push:
  stage: deploy
  needs:
    - build_prod
  only:
    - develop
    - master
    - tags
    - /^release\/.*?$/
  script:
    - echo "CI_COMMIT_REF_NAME $CI_COMMIT_REF_NAME"
    - echo "IMAGE_TAG $IMAGE_TAG"
    - echo "BRANCH_NAME = $BRANCH_NAME"
    # Push images in the registry
    - docker image push $REGISTRY_PROJECT_PATH/hubside-up/${IMG_TYPE}:$IMAGE_TAG
    - docker image tag $REGISTRY_PROJECT_PATH/hubside-up/${IMG_TYPE}:$IMAGE_TAG $REGISTRY_PROJECT_PATH_LEGACY/hubside-up/${IMG_TYPE}:$IMAGE_TAG
    - docker image push $REGISTRY_PROJECT_PATH_LEGACY/hubside-up/${IMG_TYPE}:$IMAGE_TAG

# deploy template
.deploy:
  stage: deploy
  variables:
    ENVIRONMENT: "undefined"
    DEPLOY_HOST: "undefined"
    PROJECT: "undefined"
  needs:
    - push
  cache: {}
  only:
    - develop
    - master
    - tags
    - /^release\/.*?$/
  script:
    - echo deploying on ${DEPLOY_HOST}
    # Hubside Up
    - printenv | grep -E "^VUE_|^NUXT_" | ssh -T debian@${DEPLOY_HOST} -- import-config --project ${PROJECT}-hubside-up --stack-image-tag $IMAGE_TAG --job-id $CI_JOB_ID --skip-ci-env true --skip-js-config false
    - ssh -T debian@${DEPLOY_HOST} "PROJECT=${PROJECT}-hubside-up IMAGE_TAG_NGINX_CI=$IMAGE_TAG"
  environment:
    name: ${ENVIRONMENT}
  when: manual

# deploy k8s template
.deploy_k8s:
  stage: deploy
  variables:
    HELM_CHART: "front"
    ENVIRONMENT: "undefined"
    APP: "undefined"
    CONTEXT: "undefined"
    TARGET: "undefined"
  needs:
    - push
  cache: {}
  only:
    - develop
    - master
    - tags
    - /^release\/.*?$/
  environment:
    name: ${ENVIRONMENT}
  when: manual
  script:
    - HELM_CHART_PATH="$PWD/_INFRA/Chart"
    # Hubside Up
    - ~/deploy_k8s.sh --app ${PROJECT}-hubside-up-${TARGET} --image-tag ${IMAGE_TAG} --helm-chart ${HELM_CHART} --update-config-ci --context ${CONTEXT}  --local-values-chart ${HELM_CHART_PATH}
    - ~/deploy_k8s.sh --app ${PROJECT}-hubside-up-${TARGET}-us --image-tag ${IMAGE_TAG} --helm-chart ${HELM_CHART} --update-config-ci --context ${CONTEXT}-us  --local-values-chart ${HELM_CHART_PATH}

# deploy sandbox
deploy_sandbox_gcp:
  extends: .deploy_k8s
  variables:
    ENVIRONMENT: "sandbox"
    TARGET: "sandbox"
    APP: "buyback-front-sandbox"
    CONTEXT: "c06"
    PROJECT: "buyback-front"
# deploy prod
deploy_prod_gcp:
  extends: .deploy_k8s
  variables:
    ENVIRONMENT: "prod"
    TARGET: "prod"
    APP: "buyback-front-prod"
    CONTEXT: "c08"
    PROJECT: "buyback-front"
  only:
    - /^(\d+\.){2,}(\d+\.)?(\*|\d+)([-].+)*$/
  except:
    - branches

# clean
clean:
  stage: clean
  cache: {}
  when: always
  script:
    - echo "docker image rm $REGISTRY_PROJECT_PATH/hubside-up/${IMG_TYPE}:$IMAGE_TAG || true" | at now + 10 minutes
    - docker image rm $REGISTRY_PROJECT_PATH_LEGACY/hubside-up/${IMG_TYPE}:$IMAGE_TAG || true | at now + 10 minutes
